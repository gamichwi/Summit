{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/FormElements/Button.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Map.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/context/auth-context.js","shared/hooks/http-hook.js","summits/components/SummitItem.js","summits/components/SummitList.js","summits/pages/Summits.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","summits/pages/NewSummit.js","summits/pages/UserSummits.js","summits/pages/UpdateSummit.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainNavigation.js","users/pages/Auth.js","App.js","serviceWorker.js","index.js"],"names":["logoutTimer","ButtonTemplate","props","href","Button","variant","children","to","exact","className","type","onClick","disabled","ModalTemplate","Modal","show","onHide","hide","Header","closeButton","Title","header","Body","Footer","footer","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","style","ErrorModal","error","LoadingSpinner","asOverlay","Spinner","animation","role","AuthContext","createContext","isLoggedIn","userId","token","login","logout","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","useCallback","url","a","async","method","body","headers","httpAbortController","AbortController","push","fetch","signal","response","json","responseData","filter","reqController","ok","console","log","Error","message","forEach","abortController","abort","clearError","SummitItem","auth","useContext","showMap","setShowMap","closeMapHandler","showWarning","setShowWarning","closeWarningHandler","Fragment","title","targetCoordinates","id","Authorization","onDelete","ListGroup","Item","Card","Img","src","setImage","alt","ImgOverlay","Text","targetLocation","SummitList","items","length","summit","key","completedAddress","setDate","completedDate","completed","completedImage","setCoordinates","setLocation","completedCoordinates","completedLocation","targetDate","likes","summitWord","word","private","onDeleteSummit","DUMMY_PLACES","creatorId","lat","lng","targetAddress","Summits","UserItem","width","image","name","summitCount","UsersList","user","summits","Users","loadedUsers","setLoadedUsers","users","fetchUsers","validate","value","validators","isValid","validator","trim","val","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","event","target","touchHandler","element","Form","Control","aria-label","aria-describedby","placeholder","onChange","onBlur","rows","Label","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","display","accept","pickedFile","fileIsValid","files","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","NewSummit","inputHandler","history","useHistory","Container","onSubmit","preventDefault","formData","FormData","append","Row","Col","UserSummits","loadedSummits","setLoadedSummits","useParams","fetchSummits","deletedSummitId","prevSummits","UpdateSummit","loadedSummit","setLoadedSummit","summitId","setFormData","fetchSummit","JSON","stringify","MainHeader","NavLinks","MainNavigation","Navbar","bg","Brand","height","Auth","isLoginMode","setIsLoginMode","email","password","undefined","prevMode","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80b64380.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  //create the token on login\n  const login = useCallback((userId, token, expirationDate) => {\n    setToken(token);\n    setTokenExpirationDate(null);\n    setUserId(userId);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); //Expiry date is now plus one hour. Checks if already has an expirationdate\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      //stores token in localStorage\n      \"userData\",\n      JSON.stringify({\n        userId: userId,\n        token: token,\n        expiration: tokenExpirationDate.toISOString() //ISOString can be converted back to a date later.\n      })\n    );\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\"); //Deletes Token\n  }, []);\n\n  //if token changes then adjust timer\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime(); //difference in milliseconds\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  //if the token exists use that to login\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\")); //converts back to JSON\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date() //If Token date is greater than now then it is valid.\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\n\nconst ButtonTemplate = props => {\n  if (props.href) {\n    return <Button variant={props.variant} href={props.href}>{props.children}</Button>;\n  }\n  if (props.to) {\n    return (\n      <Link to={props.to} exact={props.exact} className=\"btn btn-secondary\">\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <Button variant={props.variant} type={props.type} onClick={props.onClick} disabled={props.disabled}>\n      {props.children}\n    </Button>\n  );\n};\n\nexport default ButtonTemplate;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\n\nconst ModalTemplate = props => {  \n    return (\n      <>\n        <Modal show={props.show} onHide={props.hide}>\n          <Modal.Header closeButton>\n            <Modal.Title>{props.header}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{props.children}</Modal.Body>\n          <Modal.Footer>{props.footer}</Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\nexport default ModalTemplate;","import React, { useRef, useEffect } from \"react\";\n\nimport \"./Map.css\";\n\nconst Map = props => {\n  //connects the div below to the constant mapRef\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n\n  //useEffect allows us to register logic (a function) that should be executed when certain elements change\n  useEffect(() => {\n    //constructor function available on the global variable 'window' due to script in index.html\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]); //will run whenever center, zoom changes\n\n  return (\n    <div\n      ref={mapRef}\n      className={'map'}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport ModalTemplate from '../UIElements/Modal';\nimport ButtonTemplate from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <ModalTemplate\n      hide={props.hide}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<ButtonTemplate onClick={props.hide}>Okay</ButtonTemplate>}\n    >\n      <p>{props.error}</p>\n    </ModalTemplate>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n    isLoggedIn: false, \n    userId: null,\n    token: null,\n    login: ()=>{}, \n    logout: ()=>{}\n});","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);//store data across re-render cycles\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortController = new AbortController();\n      activeHttpRequests.current.push(httpAbortController);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortController.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqController => reqController !== httpAbortController\n        );\n\n        if (!response.ok) {\n          console.log('response',response);\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n//clean up function to ensure we never continue with a request if the page changes\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortController => abortController.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useState, useContext } from \"react\";\nimport { Card, ListGroup } from \"react-bootstrap\";\n\nimport ButtonTemplate from \"../../shared/components/FormElements/Button\";\nimport ModalTemplate from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst SummitItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const auth = useContext(AuthContext);\n  //Map Modal\n  const [showMap, setShowMap] = useState(false);\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  //Delete warning Modal\n  const [showWarning, setShowWarning] = useState(false);\n  const openWarningHandler = () => setShowWarning(true);\n  const closeWarningHandler = () => setShowWarning(false);\n\n  const confirmDeleteHandler = async () => {\n    setShowWarning(false);\n    try {\n      await sendRequest(\n        `/api/summits/${props.id}`,\n        \"DELETE\",\n        null,//no body required\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} hide={clearError} />\n\n\n      {/* Map Modal */}\n      <ModalTemplate\n        show={showMap}\n        hide={closeMapHandler}\n        header={props.title}\n        footer={\n          <ButtonTemplate onClick={closeMapHandler}>CLOSE</ButtonTemplate>\n        }\n      >\n        <div className=\"map-container\">\n          <Map center={props.targetCoordinates} zoom={16} />\n        </div>\n      </ModalTemplate>\n\n      {/* Delete Warning Modal */}\n      <ModalTemplate\n        show={showWarning}\n        hide={closeWarningHandler}\n        header={\"Are you sure you want to delete?\"}\n        footer={\n          <React.Fragment>\n            <ButtonTemplate variant={\"secondary\"} onClick={closeWarningHandler}>\n              CANCEL\n            </ButtonTemplate>\n            <ButtonTemplate variant={\"danger\"} onClick={confirmDeleteHandler}>\n              DELETE\n            </ButtonTemplate>\n          </React.Fragment>\n        }\n      >\n        Deleting a Summit can not be undone...\n      </ModalTemplate>\n\n      <ListGroup.Item>\n        <Card className=\"bg-dark text-white\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <Card.Img src={`/${props.setImage}`} alt={props.title} />\n          <Card.ImgOverlay>\n            <Card.Title>{props.title}</Card.Title>\n            <Card.Text>{props.targetLocation}</Card.Text>\n            <Card.Text>Countdown</Card.Text>\n            <ButtonTemplate onClick={openMapHandler}>MAP</ButtonTemplate>\n\n            {auth.userId === props.userId && (\n              <ButtonTemplate variant={\"secondary\"} to={`/summits/${props.id}`}>\n                EDIT\n              </ButtonTemplate>\n            )}\n\n            {auth.userId === props.userId && (\n              <ButtonTemplate variant={\"danger\"} onClick={openWarningHandler}>\n                DELETE\n              </ButtonTemplate>\n            )}\n          </Card.ImgOverlay>\n        </Card>\n      </ListGroup.Item>\n    </React.Fragment>\n  );\n};\n\nexport default SummitItem;\n","import React from \"react\";\n\nimport SummitItem from \"./SummitItem\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst SummitList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"default\">\n        <h2>No Summits were found.</h2>\n      </div>\n    );\n  }\n\nreturn (\n  <ListGroup>\n    {props.items.map(summit => (\n      <SummitItem\n        key={summit.id}\n        id={summit.id}\n        userId={summit.userId}\n        title={summit.title}\n        completedAddress={summit.completedAddress}\n        setDate={summit.setDate}\n        completedDate={summit.completedDate}\n        completed={summit.completed}\n        setImage={summit.setImage}\n        completedImage={summit.completedImage}\n        setCoordinates={summit.setLocation}\n        completedCoordinates={summit.completedLocation}\n        targetDate={summit.targetDate}\n        targetCoordinates={summit.targetCoordinates}\n        likes={summit.likes}\n        summitWord={summit.word}\n        private={summit.private}\n        onDelete={props.onDeleteSummit}\n      />\n    ))}\n  </ListGroup>\n);\n    }\n\nexport default SummitList;\n","import React from \"react\";\n// import { useParams } from \"react-router-dom\";\n\nimport SummitList from \"../components/SummitList\";\n\nconst DUMMY_PLACES = [\n  {\n    id: \"p1\",\n    creatorId: \"u1\",\n    title: \"Win a foosball championship\",\n    completedAddress: \"Bartronica, Melbourne\",\n    setDate: \"\",\n    targetDate: \"\",\n    completedDate: \"\",\n    completed: false,\n    setImage: \"uploads/images/Foosball.jpeg\",\n    completedImage:\n      \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.z1EQMkYXiRUgWV9rkGpT9AHaE8%26pid%3DApi&f=1\",\n    setLocation: {},\n    targetLocation: {\n      lat: -37.8785909,\n      lng: 144.9739747\n    },\n    targetAddress:'',\n    completedLocation: {\n      lat: -37.8785909,\n      lng: 144.9739747\n    },\n    likes: [],\n    summitWord: [],\n    private: true\n  },\n  {\n    id: \"p2\",\n    creatorId: \"u2\",\n    title: \"Win a boxing championship\",\n    completedAddress: \"Melbourne Fight Club\",\n    setDate: \"\",\n    targetDate: \"\",\n    completedDate: \"\",\n    completed: false,\n    setImage:\n      \"uploads/images/Boxing.jpeg\",\n    completedImage:\n      \"https://akm-img-a-in.tosshub.com/indiatoday/images/story/201910/jamuna9102019-770x433.png?VB4oJ8dItSqFhwwpLlkhrdCDSzixJd4w\",\n    setLocation: {},\n    targetLocation: {\n      lat: -37.8785909,\n      lng: 144.9739747\n    },\n    targetAddress:'',\n    completedLocation: {\n      lat: -37.7873385,\n      lng: 144.8642536\n    },\n    likes: [],\n    summitWord: [],\n    private: true\n  }\n];\n\nconst Summits = () => {\n//   const userId = useParams().userId;\n//   const loadedSummits = DUMMY_PLACES.filter(\n//     summit => summit.creatorId === userId\n//   );\n  return <SummitList items={DUMMY_PLACES} />;\n};\n\nexport default Summits;\n","import React from \"react\";\n\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// import \"./UserItem.css\";\n\nconst UserItem = props => {\n  return (\n    <ListGroup.Item>\n      <Card style={{ width: \"18rem\" }}>\n        <Link to={`/${props.id}/summits`}>\n          <Card.Img\n            variant=\"top\"\n            src={`/${props.image}`}\n          />\n        </Link>\n        <Card.Body>\n          <Card.Title>{props.name}</Card.Title>\n          <Card.Text>Conquering {props.summitCount} summits!</Card.Text>\n        </Card.Body>\n      </Card>\n    </ListGroup.Item>\n  );\n};\n\nexport default UserItem;\n","import React from \"react\";\n\nimport UserItem from \"./UserItem\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"default\">\n        <h2>No users were found.</h2>\n      </div>\n    );\n  }\n  return (\n    <ListGroup>\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          summitCount={user.summits.length}\n        />\n      ))}\n    </ListGroup>\n  );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from \"react\";\n\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const {isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\"/api/users\");\n\n        setLoadedUsers(responseData.users);\n        } catch (err) {\n        //handled in http-hook\n      }\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} hide={clearError} />\n      {isLoading && (\n        <>\n          <LoadingSpinner asOverlay/>\n        </>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />};\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useEffect, useReducer } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nimport { validate } from \"../../util/validators\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        value: action.val,\n        isTouched: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isValid: props.initialValid || false,\n    isTouched: false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n      onInput(id, value, isValid);\n    },\n    //Hide warning about useEffect on the next line\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id, value, isValid, onInput]\n  );\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = event => {\n    dispatch({\n      type: \"TOUCH\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <>\n          <Form.Control\n            aria-label=\"Large\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n            id={props.id}\n            type={props.type}\n            placeholder={props.placeholder}\n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputState.value}\n          />\n      </>\n    ) : (\n    <>\n      <Form.Control\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n      </>\n    );\n\n  return (\n    <div>\n      <Form.Label htmlFor={props.id}>{props.label}</Form.Label>\n \n      {/* <label htmlFor={props.id}>{props.label}</label> */}\n      {element}\n\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader(); // from the browser\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    }; //must be executed every time the fileReader loads a new file or is done parsing a file\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div>\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n     \n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]){\n          continue;//don't continue with this iteration of the for loop continue the next iteration \n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n      case 'SET_DATA':\n          return {\n              inputs: action.inputs,\n              isValid: action.formIsValid\n          };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  // useCallBack to avoid infinite loop\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Col, Row } from \"react-bootstrap\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport ButtonTemplate from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst NewSummit = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false\n      },\n      targetDate: {\n        value: \"\",\n        isValid: false\n      },\n      targetAddress: {\n        value: \"\",\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory(); //allows navigation history\n\n  const summitSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"targetAddress\", formState.inputs.targetAddress.value);\n      formData.append(\"targetDate\", formState.inputs.targetDate.value);\n      formData.append(\"image\", formState.inputs.image.value);\n      await sendRequest(\n        \"/api/summits\",\n        \"POST\",\n        formData, {Authorization: 'Bearer ' + auth.token} //provides headers\n      );\n      history.push(\"/\"); //Re-Direct to /\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n \n        <ErrorModal error={error} hide={clearError} />\n\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Container>\n        <form onSubmit={summitSubmitHandler}>\n        <Row>\n          <Col>\n        \n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"What is your Summit?\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"targetDate\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Target Date\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid target date.\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"targetAddress\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Target Location\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid location.\"\n            onInput={inputHandler}\n          />\n          <br />\n          <br />\n                    <ButtonTemplate type=\"submit\" disabled={!formState.isValid}>\n            ADD SUMMIT\n          </ButtonTemplate>\n          </Col>\n          <Col>\n          <br />\n          <ImageUpload\n            id=\"image\"\n            onInput={inputHandler}\n            errorText=\"Please provide an image.\"\n          />\n          </Col>\n          <br />\n          </Row>\n          <Row>\n\n          \n          </Row>\n\n        </form>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default NewSummit;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport SummitList from \"../components/SummitList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\n\nconst UserSummits = () => {\n  const [loadedSummits, setLoadedSummits] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchSummits = async () => {\n      try {\n        const responseData = await sendRequest(\n          `/api/summits/user/${userId}`\n        );\n        setLoadedSummits(responseData.summits);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchSummits();\n  }, [sendRequest, userId]);\n\n  const summitDeletedHandler = deletedSummitId => {\n    setLoadedSummits(prevSummits =>\n      prevSummits.filter(summit => summit.id !== deletedSummitId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} hide={clearError} />\n      {isLoading && <LoadingSpinner asOverlay />}\n      {!isLoading && loadedSummits && (\n        <SummitList items={loadedSummits} onDeleteSummit={summitDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserSummits;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport ButtonTemplate from \"../../shared/components/FormElements/Button\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst UpdateSummit = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedSummit, setLoadedSummit] = useState();\n  const history = useHistory();\n  const summitId = useParams().summitId;\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false\n      },\n      targetDate: {\n        value: \"\",\n        isValid: false\n      },\n      targetAddress: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchSummit = async () => {\n      try {\n        const responseData = await sendRequest(\n          `api/summits/${summitId}`,\n        );\n        setLoadedSummit(responseData.summit);\n        setFormData(\n          {\n            title: {\n              value: responseData.summit.title,\n              isValid: true\n            },\n            targetDate: {\n              value: responseData.summit.targetDate,\n              isValid: true\n            },\n            targetAddress: {\n              value: responseData.summit.targetAddress,\n              isValid: true\n            }\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchSummit();\n  }, [sendRequest, summitId, setFormData]);\n\n  const summitUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    // try {\n      await sendRequest(\n        `/api/summits/${summitId}`,\n        \"PATCH\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          targetAddress: formState.inputs.targetAddress.value,\n          targetDate: formState.inputs.targetDate.value\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push(\"/\" + auth.userId + \"/summits\");\n    // } catch (err) {\n      // console.log(err);\n    // }\n  };\n\n  if (!isLoading && !loadedSummit) {\n    return <h2>Could not find the summit you're looking for.</h2>;\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} hide={clearError} />\n        {isLoading && <LoadingSpinner asOverlay />}\n        {!isLoading && loadedSummit && (\n      <form onSubmit={summitUpdateSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"What is your Summit?\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid Summit Title.\"\n          onInput={inputHandler}\n          initialValue={loadedSummit.title}\n          initialValid={true}\n        />\n        <Input\n          id=\"targetDate\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Target Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid Summit Target Date.\"\n          onInput={inputHandler}\n          initialValue={loadedSummit.targetDate}\n          initialValid={true}\n        />\n        <Input\n          id=\"targetAddress\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Target Location\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid Summit Target Location.\"\n          onInput={inputHandler}\n          initialValue={loadedSummit.targetAddress}\n          initialValid={true}\n        />\n        <br />\n        <ButtonTemplate type=\"submit\" disabled={!formState.isValid}>\n          UPDATE\n        </ButtonTemplate>\n      </form>\n        )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateSummit;\n","import React from 'react';\n\n// import \"./MainHeader.css\";\n\nconst MainHeader = props => {\n    return <header className=\"main-header\">\n        {props.children}\n    </header>\n};\n\nexport default MainHeader;","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport ButtonTemplate from '../FormElements/Button';\nimport { AuthContext } from \"../../context/auth-context\";//Only shows if logged in\n\n// import './NavLinks.css'\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext); //will re-render whenever AuthContext changes\n  return (\n    <div className=\"nav-links\">\n    <ul>\n      <li>\n        <NavLink to=\"/\">SUMMIT FEED</NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/summits`}>MY SUMMITS</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/summits/new\">NEW SUMMIT</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n      <li>\n        <NavLink to=\"/users\">FRIENDS</NavLink>\n      </li>\n      )}\n      {!auth.isLoggedIn && (\n      <li>\n        <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n      </li>\n      )}\n      {auth.isLoggedIn && (\n        <ButtonTemplate onClick={auth.logout}>LOG OUT</ButtonTemplate>\n      )}\n    </ul>\n    </div>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\n\nconst MainNavigation = props => {\n  return (\n    <div className=\"main-navigation\">\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">\n        <img\n          alt=\"Summit logo\"\n          src=\"https://vignette.wikia.nocookie.net/logopedia/images/9/9f/ParamountLandscape.jpg/revision/latest?cb=20130119125027\"\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />{\" \"}\n        Summit\n      </Navbar.Brand>\n      <MainHeader>\n          <NavLinks />\n        </MainHeader>\n    </Navbar>\n    </div>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useState, useContext } from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport ButtonTemplate from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false\n      },\n      password: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    false\n  );\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          //url, method, body, headers\n          \"/api/users/login\",\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          { \"Content-Type\": \"application/json\" }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData(); //can't store image as json. Use FormData.\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n        const responseData = await sendRequest(\n          \"/api/users/signup\",\n          \"POST\",\n          formData // includes the headers\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} hide={clearError} />\n\n      {isLoading && <LoadingSpinner asOverlay />}\n      <h2>Login Required</h2>\n        <form onSubmit={authSubmitHandler}>\n          <Row>\n            <Col>\n              {!isLoginMode && (\n                <Input\n                  element=\"input\"\n                  id=\"name\"\n                  type=\"text\"\n                  label=\"Your Name\"\n                  validators={[VALIDATOR_REQUIRE()]}\n                  errorText=\"Please enter your name.\"\n                  onInput={inputHandler}\n                />\n              )}\n\n              <Input\n                element=\"input\"\n                id=\"email\"\n                type=\"email\"\n                label=\"E-Mail\"\n                validators={[VALIDATOR_EMAIL()]}\n                errorText=\"Please enter a valid email address.\"\n                onInput={inputHandler}\n              />\n              <Input\n                element=\"input\"\n                id=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                validators={[VALIDATOR_MINLENGTH(8)]}\n                errorText=\"Please enter a valid password, at least 8 characters.\"\n                onInput={inputHandler}\n              />\n            </Col>\n            <Col>\n              <br />\n              {!isLoginMode && (\n                <ImageUpload\n                  center\n                  id=\"image\"\n                  onInput={inputHandler}\n                  errorText=\"Please provide an image.\"\n                />\n              )}\n            </Col>\n          </Row>\n            <br />\n            <Row>\n            <ButtonTemplate type=\"submit\" disabled={!formState.isValid}>\n              {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n            </ButtonTemplate>\n            <ButtonTemplate onClick={switchModeHandler} variant=\"secondary\">\n              SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n            </ButtonTemplate>\n          </Row>\n        </form>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nimport Summits from \"./summits/pages/Summits\";\nimport Users from \"./users/pages/Users\";\nimport NewSummit from \"./summits/pages/NewSummit\";\nimport UserSummits from \"./summits/pages/UserSummits\";\nimport UpdateSummit from \"./summits/pages/UpdateSummit\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport NavBootstrap from './shared/components/Navigation/NavBootstrap';\nimport Auth from \"./users/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from './shared/hooks/auth-hook';\n\nimport \"./App.css\";\n\n\nconst App = () => {\n const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      //if a correct path is entered switch will prevent the rest from loading.\n      <Switch>\n        <Route path=\"/\" exact>\n          <Summits />\n        </Route>\n        <Route path=\"/users\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/summits\" exact>\n          <UserSummits />\n        </Route>\n        <Route path=\"/summits/new\" exact>\n          <NewSummit />\n        </Route>\n        <Route path=\"/summits/:summitId\">\n          <UpdateSummit />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Summits />\n        </Route>\n        <Route path=\"/:userId/summits\" exact>\n          <UserSummits />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token, //converts to boolean\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        {/* <NavBootstrap /> */}\n        <Container>\n          <main>{routes}</main>\n        </Container>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}