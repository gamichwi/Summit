{"version":3,"sources":["shared/components/FormElements/Button.js","shared/context/auth-context.js","shared/components/UIElements/Modal.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Map.js","shared/util/dateDifference.js","summits/components/SummitItem.js","summits/components/SummitList.js","shared/hooks/auth-hook.js","summits/pages/Summits.js","shared/components/Navigation/NavBootstrap.js","shared/components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ButtonTemplate","props","href","toolTipText","placement","overlay","id","variant","children","to","exact","className","type","onClick","disabled","AuthContext","createContext","isLoggedIn","userId","token","login","logout","ModalTemplate","show","onHide","hide","Header","closeButton","Title","header","Body","Footer","footer","LoadingSpinner","asOverlay","animation","role","ErrorModal","error","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","async","method","body","headers","httpAbortController","AbortController","current","push","console","log","fetch","signal","response","json","responseData","filter","reqController","ok","Error","message","useEffect","forEach","abortController","abort","clearError","Map","mapRef","center","zoom","map","window","google","maps","Marker","position","ref","style","dateDifference","date1","date2","dt1","dt2","Date","UTC","getFullYear","getMonth","getDate","today","Math","floor","SummitItem","auth","useContext","showMap","setShowMap","closeMapHandler","showWarning","setShowWarning","closeWarningHandler","Fragment","Modal","title","Button","targetCoordinates","Authorization","onDelete","Card","Img","src","setImage","alt","Text","targetLocation","targetDate","SummitList","items","length","summit","key","completedAddress","setDate","completedDate","completed","completedImage","setCoordinates","setLocation","completedCoordinates","completedLocation","likes","summitWord","word","private","onDeleteSummit","logoutTimer","DUMMY_PLACES","creatorId","lat","lng","targetAddress","Summits","NavBootstrap","Navbar","collapseOnSelect","expand","bg","Brand","width","height","Toggle","aria-controls","Collapse","Nav","Link","as","eventKey","Users","React","lazy","NewSummit","UserSummits","UpdateSummit","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","expirationDate","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","Container","fallback","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e141989.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nconst ButtonTemplate = props => {\n  if (props.href) {\n    if (props.toolTipText) {\n      return (\n        <OverlayTrigger\n          placement=\"top\"\n          overlay={<Tooltip id=\"button-toolip\"> {props.toolTipText}</Tooltip>}\n        >\n          <Button variant={props.variant} href={props.href}>\n            {props.children}\n          </Button>\n        </OverlayTrigger>\n      );\n    } else {\n      return (\n        <Button variant={props.variant} href={props.href}>\n          {props.children}\n        </Button>\n      );\n    }\n  }\n\n  if (props.to) {\n    if (props.toolTipText){\n    return (\n      <OverlayTrigger\n        placement=\"top\"\n        overlay={<Tooltip id=\"button-toolip\">{props.toolTipText}</Tooltip>}\n      >\n        <Link to={props.to} exact={props.exact} className=\"btn btn-secondary\">\n          {props.children}\n        </Link>\n      </OverlayTrigger>\n    );}\n    else{\n      return         <Link to={props.to} exact={props.exact} className=\"btn btn-secondary\">\n      {props.children}\n    </Link>\n    }\n  }\n  if(props.toolTipText){\n  return (\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={<Tooltip id=\"button-toolip\"> {props.toolTipText}</Tooltip>}\n    >\n      <Button\n        variant={props.variant}\n        type={props.type}\n        onClick={props.onClick}\n        disabled={props.disabled}\n      >\n        {props.children}\n      </Button>\n    </OverlayTrigger>\n  );}\n  else {\n    return <Button\n    variant={props.variant}\n    type={props.type}\n    onClick={props.onClick}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </Button>\n  }\n};\n\nexport default ButtonTemplate;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n    isLoggedIn: false, \n    userId: null,\n    token: null,\n    login: ()=>{}, \n    logout: ()=>{}\n});","import React from 'react';\nimport { Modal } from 'react-bootstrap';\n\nconst ModalTemplate = props => {  \n    return (\n      <>\n        <Modal show={props.show} onHide={props.hide}>\n          <Modal.Header closeButton>\n            <Modal.Title>{props.header}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{props.children}</Modal.Body>\n          <Modal.Footer>{props.footer}</Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\nexport default ModalTemplate;","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ModalTemplate from '../UIElements/Modal';\nimport ButtonTemplate from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <ModalTemplate\n      hide={props.hide}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<ButtonTemplate onClick={props.hide}>Okay</ButtonTemplate>}\n    >\n      <p>{props.error}</p>\n    </ModalTemplate>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);//store data across re-render cycles\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortController = new AbortController();\n      activeHttpRequests.current.push(httpAbortController);\n      console.log('url',url);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortController.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqController => reqController !== httpAbortController\n        );\n\n        if (!response.ok) {\n\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n//clean up function to ensure we never continue with a request if the page changes\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortController => abortController.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useRef, useEffect } from \"react\";\n\nimport \"./Map.css\";\n\nconst Map = props => {\n  //connects the div below to the constant mapRef\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n\n  //useEffect allows us to register logic (a function) that should be executed when certain elements change\n  useEffect(() => {\n    //constructor function available on the global variable 'window' due to script in index.html\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]); //will run whenever center, zoom changes\n\n  return (\n    <div\n      ref={mapRef}\n      className={'map'}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","const dateDifference = function(date1, date2) {\n  console.log('date1',date1);  \n  console.log('date2',date2);  \n  let dt1;\n  let dt2;\n  if (!date1) {\n    let today = new Date();\n    dt1 = Date.UTC(today.getFullYear(), today.getMonth(), today.getDate());\n  } else {\n    dt1 = new Date(date1);\n    dt1 = Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate());\n  }\n\n  dt2 = new Date(date2);\n  const dateDifference = Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - dt1) /\n      (1000 * 60 * 60 * 24)\n  );\n  console.log(dateDifference);\n  return dateDifference;\n};\n\nexport default dateDifference;\n","import React, { useState, useContext } from \"react\";\nimport { Card, ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { MdMap, MdModeEdit, MdDelete } from \"react-icons/md\";\n\nimport ButtonTemplate from \"../../shared/components/FormElements/Button\";\nimport ModalTemplate from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport dateDifference from \"../../shared/util/dateDifference\";\n\nconst SummitItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const auth = useContext(AuthContext);\n  //Map Modal\n  const [showMap, setShowMap] = useState(false);\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  //Delete warning Modal\n  const [showWarning, setShowWarning] = useState(false);\n  const openWarningHandler = () => setShowWarning(true);\n  const closeWarningHandler = () => setShowWarning(false);\n\n  const confirmDeleteHandler = async () => {\n    setShowWarning(false);\n    try {\n      await sendRequest(\n        `/api/summits/${props.id}`,\n        \"DELETE\",\n        null, //no body required\n        {\n          Authorization: \"Bearer \" + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} hide={clearError} />\n\n      {/* Map Modal */}\n      <ModalTemplate\n        show={showMap}\n        hide={closeMapHandler}\n        header={props.title}\n        footer={\n          <ButtonTemplate onClick={closeMapHandler}>CLOSE</ButtonTemplate>\n        }\n      >\n        <div className=\"map-container\">\n          <Map center={props.targetCoordinates} zoom={16} />\n        </div>\n      </ModalTemplate>\n\n      {/* Delete Warning Modal */}\n      <ModalTemplate\n        show={showWarning}\n        hide={closeWarningHandler}\n        header={\"Are you sure you want to delete?\"}\n        footer={\n          <React.Fragment>\n            <ButtonTemplate variant={\"secondary\"} onClick={closeWarningHandler}>\n              CANCEL\n            </ButtonTemplate>\n            <ButtonTemplate variant={\"danger\"} onClick={confirmDeleteHandler}>\n              DELETE\n            </ButtonTemplate>\n          </React.Fragment>\n        }\n      >\n        Deleting a Summit can not be undone...\n      </ModalTemplate>\n\n      {/* <ListGroup.Item> */}\n      <Card className=\"bg-dark text-white summitItem\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Card.Img src={`/${props.setImage}`} alt={props.title} />\n        <Card.Body>\n          <Card.Title>{props.title}</Card.Title>\n          <Card.Text>{props.targetLocation}</Card.Text>\n          <Card.Text>\n            Countdown: {dateDifference(null, props.targetDate)} days to go!\n          </Card.Text>\n\n            <ButtonTemplate toolTipText=\"Map!\" className=\"map\" onClick={openMapHandler}>\n              <MdMap />\n            </ButtonTemplate>\n\n          {auth.userId === props.userId && (\n            <ButtonTemplate\n            toolTipText=\"Edit!\" \n              className=\"edit\"\n              variant={\"secondary\"}\n              to={`/summits/${props.id}`}\n            >\n              <MdModeEdit />\n            </ButtonTemplate>\n          )}\n\n          {auth.userId === props.userId && (\n            <ButtonTemplate\n            toolTipText=\"Delete!\" \n              className=\"delete\"\n              variant={\"danger\"}\n              onClick={openWarningHandler}\n            >\n              <MdDelete />\n            </ButtonTemplate>\n          )}\n        </Card.Body>\n      </Card>\n      {/* </ListGroup.Item> */}\n    </React.Fragment>\n  );\n};\n\nexport default SummitItem;\n","import React from \"react\";\n\nimport SummitItem from \"./SummitItem\";\nimport { ListGroup } from \"react-bootstrap\";\n\nimport './SummitList.css'\n\nconst SummitList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"default\">\n        <h2>No Summits were found.</h2>\n      </div>\n    );\n  }\n\nreturn (\n  // <ListGroup>\n  <div className=\"flexContainer\">\n    {props.items.map(summit => (\n      <SummitItem\n        key={summit.id}\n        id={summit.id}\n        userId={summit.userId}\n        title={summit.title}\n        completedAddress={summit.completedAddress}\n        setDate={summit.setDate}\n        completedDate={summit.completedDate}\n        completed={summit.completed}\n        setImage={summit.setImage}\n        completedImage={summit.completedImage}\n        setCoordinates={summit.setLocation}\n        completedCoordinates={summit.completedLocation}\n        targetDate={summit.targetDate}\n        targetCoordinates={summit.targetCoordinates}\n        likes={summit.likes}\n        summitWord={summit.word}\n        private={summit.private}\n        onDelete={props.onDeleteSummit}\n      />\n    ))}\n   {/* </ListGroup> */}\n   </div>\n);\n    }\n\nexport default SummitList;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  //create the token on login\n  const login = useCallback((userId, token, expirationDate) => {\n    setToken(token);\n    setTokenExpirationDate(null);\n    setUserId(userId);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); //Expiry date is now plus one hour. Checks if already has an expirationdate\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      //stores token in localStorage\n      \"userData\",\n      JSON.stringify({\n        userId: userId,\n        token: token,\n        expiration: tokenExpirationDate.toISOString() //ISOString can be converted back to a date later.\n      })\n    );\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\"); //Deletes Token\n  }, []);\n\n  //if token changes then adjust timer\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime(); //difference in milliseconds\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  //if the token exists use that to login\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\")); //converts back to JSON\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date() //If Token date is greater than now then it is valid.\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from \"react\";\n// import { useParams } from \"react-router-dom\";\n\nimport SummitList from \"../components/SummitList\";\n\nconst DUMMY_PLACES = [\n  {\n    id: \"p2\",\n    creatorId: \"u2\",\n    title: \"Win a boxing championship\",\n    completedAddress: \"Melbourne Fight Club\",\n    setDate: \"\",\n    targetDate: \"6/5/21\",\n    completedDate: \"\",\n    completed: false,\n    setImage:\n      \"uploads/images/Boxing.jpeg\",\n    completedImage:\n      \"https://akm-img-a-in.tosshub.com/indiatoday/images/story/201910/jamuna9102019-770x433.png?VB4oJ8dItSqFhwwpLlkhrdCDSzixJd4w\",\n    setLocation: {},\n    targetLocation: {\n      lat: -37.8192442,\n      lng: 144.9620749\n    },\n    targetAddress:'',\n    completedLocation: {\n      lat: -37.7873385,\n      lng: 144.8642536\n    },\n    likes: [],\n    summitWord: [],\n    private: true\n  },\n  {\n    id: \"p1\",\n    creatorId: \"u1\",\n    title: \"Win a foosball championship\",\n    completedAddress: \"Bartronica, Melbourne\",\n    setDate: \"\",\n    targetDate: \"9/8/20\",\n    completedDate: \"\",\n    completed: false,\n    setImage: \"uploads/images/Foosball.jpeg\",\n    completedImage:\n      \"https://3.bp.blogspot.com/_TWDIyi5pqlc/TCSymSdTlkI/AAAAAAAAFm4/zzGzAh3S1mQ/s1600/artwork_images_365_268246_maurizio-cattelan-1.jpg\",\n    setLocation: {},\n    targetLocation: {\n      lat: -37.8177681,\n      lng: 144.9610117\n    },\n    targetAddress:'',\n    completedLocation: {\n      lat: -37.8785909,\n      lng: 144.9739747\n    },\n    likes: [],\n    summitWord: [],\n    private: true\n  }\n\n];\n\nconst Summits = () => {\n//   const userId = useParams().userId;\n//   const loadedSummits = DUMMY_PLACES.filter(\n//     summit => summit.creatorId === userId\n//   );\n  return <SummitList items={DUMMY_PLACES} />;\n};\n\nexport default Summits;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { AuthContext } from \"../../context/auth-context\"; //Only shows if logged in\n\n// import \"./NavBootstrap.css\";\n\nconst NavBootstrap = () => {\n  const auth = useContext(AuthContext); //will re-render whenever AuthContext changes\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">\n        {\" \"}\n        <img\n          alt=\"Summit logo\"\n          src=\"https://i.imgur.com/mpa7HRl.png\"\n          width=\"90\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {auth.isLoggedIn && (\n            <Nav.Link as={Link} to={`/${auth.userId}/summits`}>My Summits</Nav.Link>\n          )}\n          {auth.isLoggedIn && (\n            <Nav.Link as={Link} to=\"/summits/new\">\n              New Summit\n            </Nav.Link>\n          )}\n          {auth.isLoggedIn && <Nav.Link as={Link} to=\"/users\">Summiteers</Nav.Link>}\n          {/* \n      <Nav.Link href=\"#features\">Features</Nav.Link>\n      <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n      <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n      </NavDropdown> */}\n        </Nav>\n        <Nav>\n          {!auth.isLoggedIn && <Nav.Link as={Link} to=\"/auth\">Authenticate</Nav.Link>}\n\n          {auth.isLoggedIn && (\n            <Nav.Link eventKey={2} onClick={auth.logout}>\n              Log Out\n            </Nav.Link>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBootstrap;\n","import React from 'react';\n\n import \"./Footer.css\";\n\nconst Footer = props => {\n    return <footer className=\"footer\">\n    </footer>\n};\n\nexport default Footer;","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nimport Summits from \"./summits/pages/Summits\";\n// import Users from \"./users/pages/Users\";\n//import NewSummit from \"./summits/pages/NewSummit\";\n//import UserSummits from \"./summits/pages/UserSummits\";\n//import UpdateSummit from \"./summits/pages/UpdateSummit\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport NavBootstrap from './shared/components/Navigation/NavBootstrap';\n//import Auth from \"./users/pages/Auth\";\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from './shared/hooks/auth-hook';\nimport Footer from './shared/components/Footer/Footer';\n\nimport \"./App.css\";\n\n//load when required\nconst Users = React.lazy(()=> import('./users/pages/Users'))\nconst NewSummit = React.lazy(()=> import('./summits/pages/NewSummit'))\nconst UserSummits = React.lazy(()=> import('./summits/pages/UserSummits'))\nconst UpdateSummit = React.lazy(()=> import('./summits/pages/UpdateSummit'))\nconst Auth = React.lazy(()=> import('./users/pages/Auth'))\n\nconst App = () => {\n const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      //if a correct path is entered switch will prevent the rest from loading.\n      <Switch>\n        <Route path=\"/\" exact>\n          <Summits />\n        </Route>\n        <Route path=\"/users\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/summits\" exact>\n          <UserSummits />\n        </Route>\n        <Route path=\"/summits/new\" exact>\n          <NewSummit />\n        </Route>\n        <Route path=\"/summits/:summitId\">\n          <UpdateSummit />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Summits />\n        </Route>\n        <Route path=\"/:userId/summits\" exact>\n          <UserSummits />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token, //converts to boolean\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        {/* <MainNavigation /> */}\n        <NavBootstrap />\n        <Container>\n          <main><Suspense fallback={<LoadingSpinner asOverlay/>}>{routes}</Suspense></main>\n        </Container>\n        <Footer />\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}