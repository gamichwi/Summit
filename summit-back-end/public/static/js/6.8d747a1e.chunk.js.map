{"version":3,"sources":["users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"names":["UserItem","props","Card","className","to","id","Img","src","image","Body","Title","name","Text","summitCount","UsersList","items","length","map","user","key","summits","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","async","responseData","users","fetchUsers","Fragment","ErrorModal","hide","LoadingSpinner","asOverlay"],"mappings":"qNAuBeA,EAhBE,SAAAC,GACf,OAEI,kBAACC,EAAA,EAAD,CAAMC,UAAU,+BACd,kBAAC,IAAD,CAAMC,GAAE,WAAMH,EAAMI,GAAZ,aACN,kBAACH,EAAA,EAAKI,IAAN,CAAUC,IAAG,WAAMN,EAAMO,UAE3B,kBAACN,EAAA,EAAKO,KAAN,KACE,kBAACP,EAAA,EAAKQ,MAAN,KAAaT,EAAMU,MACnB,kBAACT,EAAA,EAAKU,KAAN,mBAAuBX,EAAMY,YAA7B,gBCgBKC,G,OAzBG,SAAAb,GAChB,OAA2B,IAAvBA,EAAMc,MAAMC,OAEZ,yBAAKb,UAAU,WACb,qDAMJ,yBAAKA,UAAU,iBACZF,EAAMc,MAAME,KAAI,SAAAC,GAAI,OACnB,kBAAC,EAAD,CACEC,IAAKD,EAAKb,GACVA,GAAIa,EAAKb,GACTG,MAAOU,EAAKV,MACZG,KAAMO,EAAKP,KACXE,YAAaK,EAAKE,QAAQJ,e,wBCarBK,UA9BD,WAAO,IAAD,EACoCC,cAA9CC,EADU,EACVA,UAAWC,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,WADrB,EAEoBC,qBAFpB,mBAEXC,EAFW,KAEEC,EAFF,KAiBlB,OAbAC,qBAAU,YACW,mBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEYN,EAAY,eAFxB,OAETQ,EAFS,OAIfJ,EAAeI,EAAaC,OAJb,sGASnBC,KACC,CAACV,IAGF,kBAAC,IAAMW,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYb,MAAOA,EAAOc,KAAMZ,IAC/BH,GACC,oCACE,kBAACgB,EAAA,EAAD,CAAgBC,WAAS,MAG3BjB,GAAaK,GAAe,kBAAC,EAAD,CAAWb,MAAOa","file":"static/js/6.8d747a1e.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// import \"./UserItem.css\";\n\nconst UserItem = props => {\n  return (\n    // <ListGroup.Item>\n      <Card className=\"bg-dark text-white userItem\" >\n        <Link to={`/${props.id}/summits`}>\n          <Card.Img src={`/${props.image}`} />\n        </Link>\n        <Card.Body>\n          <Card.Title>{props.name}</Card.Title>\n          <Card.Text>Conquering {props.summitCount} Summits!</Card.Text>\n        </Card.Body>\n      </Card>\n    // </ListGroup.Item>\n  );\n};\n\nexport default UserItem;\n","import React from \"react\";\n\nimport UserItem from \"./UserItem\";\nimport { ListGroup } from \"react-bootstrap\";\n\nimport './UserList.css'\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"default\">\n        <h2>No users were found.</h2>\n      </div>\n    );\n  }\n  return (\n    // <ListGroup>\n    <div className=\"flexContainer\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          summitCount={user.summits.length}\n        />\n      ))}\n      </div>\n    // </ListGroup>\n  );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from \"react\";\n\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\"/api/users\");\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        //handled in http-hook\n      }\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} hide={clearError} />\n      {isLoading && (\n        <>\n          <LoadingSpinner asOverlay />\n        </>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n"],"sourceRoot":""}