{"version":3,"sources":["shared/components/FormElements/Button.js","shared/context/auth-context.js","shared/components/UIElements/Modal.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Map.js","summits/components/SummitItem.js","summits/components/SummitList.js","shared/hooks/auth-hook.js","summits/pages/Summits.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainNavigation.js","App.js","serviceWorker.js","index.js"],"names":["ButtonTemplate","props","href","variant","children","to","exact","className","type","onClick","disabled","AuthContext","createContext","isLoggedIn","userId","token","login","logout","ModalTemplate","show","onHide","hide","Header","closeButton","Title","header","Body","Footer","footer","LoadingSpinner","asOverlay","animation","role","ErrorModal","error","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","async","method","body","headers","httpAbortController","AbortController","current","push","console","log","fetch","signal","response","json","responseData","filter","reqController","ok","Error","message","useEffect","forEach","abortController","abort","clearError","Map","mapRef","center","zoom","map","window","google","maps","Marker","position","ref","style","SummitItem","auth","useContext","showMap","setShowMap","closeMapHandler","showWarning","setShowWarning","closeWarningHandler","Fragment","Modal","title","Button","targetCoordinates","id","Authorization","onDelete","ListGroup","Item","Card","Img","src","setImage","alt","ImgOverlay","Text","targetLocation","SummitList","items","length","summit","key","completedAddress","setDate","completedDate","completed","completedImage","setCoordinates","setLocation","completedCoordinates","completedLocation","targetDate","likes","summitWord","word","private","onDeleteSummit","logoutTimer","DUMMY_PLACES","creatorId","lat","lng","targetAddress","Summits","MainHeader","NavLinks","MainNavigation","Navbar","bg","Brand","width","height","Users","React","lazy","NewSummit","UserSummits","UpdateSummit","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","Container","fallback","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22e8a2dc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\n\nconst ButtonTemplate = props => {\n  if (props.href) {\n    return <Button variant={props.variant} href={props.href}>{props.children}</Button>;\n  }\n  if (props.to) {\n    return (\n      <Link to={props.to} exact={props.exact} className=\"btn btn-secondary\">\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <Button variant={props.variant} type={props.type} onClick={props.onClick} disabled={props.disabled}>\n      {props.children}\n    </Button>\n  );\n};\n\nexport default ButtonTemplate;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n    isLoggedIn: false, \n    userId: null,\n    token: null,\n    login: ()=>{}, \n    logout: ()=>{}\n});","import React from 'react';\nimport { Modal } from 'react-bootstrap';\n\nconst ModalTemplate = props => {  \n    return (\n      <>\n        <Modal show={props.show} onHide={props.hide}>\n          <Modal.Header closeButton>\n            <Modal.Title>{props.header}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{props.children}</Modal.Body>\n          <Modal.Footer>{props.footer}</Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\nexport default ModalTemplate;","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ModalTemplate from '../UIElements/Modal';\nimport ButtonTemplate from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <ModalTemplate\n      hide={props.hide}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<ButtonTemplate onClick={props.hide}>Okay</ButtonTemplate>}\n    >\n      <p>{props.error}</p>\n    </ModalTemplate>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);//store data across re-render cycles\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortController = new AbortController();\n      activeHttpRequests.current.push(httpAbortController);\n      console.log('url',url);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortController.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqController => reqController !== httpAbortController\n        );\n\n        if (!response.ok) {\n\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n//clean up function to ensure we never continue with a request if the page changes\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortController => abortController.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useRef, useEffect } from \"react\";\n\nimport \"./Map.css\";\n\nconst Map = props => {\n  //connects the div below to the constant mapRef\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n\n  //useEffect allows us to register logic (a function) that should be executed when certain elements change\n  useEffect(() => {\n    //constructor function available on the global variable 'window' due to script in index.html\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]); //will run whenever center, zoom changes\n\n  return (\n    <div\n      ref={mapRef}\n      className={'map'}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from \"react\";\nimport { Card, ListGroup } from \"react-bootstrap\";\n\nimport ButtonTemplate from \"../../shared/components/FormElements/Button\";\nimport ModalTemplate from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst SummitItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const auth = useContext(AuthContext);\n  //Map Modal\n  const [showMap, setShowMap] = useState(false);\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  //Delete warning Modal\n  const [showWarning, setShowWarning] = useState(false);\n  const openWarningHandler = () => setShowWarning(true);\n  const closeWarningHandler = () => setShowWarning(false);\n\n  const confirmDeleteHandler = async () => {\n    setShowWarning(false);\n    try {\n      await sendRequest(\n        `/api/summits/${props.id}`,\n        \"DELETE\",\n        null,//no body required\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} hide={clearError} />\n\n\n      {/* Map Modal */}\n      <ModalTemplate\n        show={showMap}\n        hide={closeMapHandler}\n        header={props.title}\n        footer={\n          <ButtonTemplate onClick={closeMapHandler}>CLOSE</ButtonTemplate>\n        }\n      >\n        <div className=\"map-container\">\n          <Map center={props.targetCoordinates} zoom={16} />\n        </div>\n      </ModalTemplate>\n\n      {/* Delete Warning Modal */}\n      <ModalTemplate\n        show={showWarning}\n        hide={closeWarningHandler}\n        header={\"Are you sure you want to delete?\"}\n        footer={\n          <React.Fragment>\n            <ButtonTemplate variant={\"secondary\"} onClick={closeWarningHandler}>\n              CANCEL\n            </ButtonTemplate>\n            <ButtonTemplate variant={\"danger\"} onClick={confirmDeleteHandler}>\n              DELETE\n            </ButtonTemplate>\n          </React.Fragment>\n        }\n      >\n        Deleting a Summit can not be undone...\n      </ModalTemplate>\n\n      <ListGroup.Item>\n        <Card className=\"bg-dark text-white\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <Card.Img src={`/${props.setImage}`} alt={props.title} />\n          <Card.ImgOverlay>\n            <Card.Title>{props.title}</Card.Title>\n            <Card.Text>{props.targetLocation}</Card.Text>\n            <Card.Text>Countdown</Card.Text>\n            <ButtonTemplate onClick={openMapHandler}>MAP</ButtonTemplate>\n\n            {auth.userId === props.userId && (\n              <ButtonTemplate variant={\"secondary\"} to={`/summits/${props.id}`}>\n                EDIT\n              </ButtonTemplate>\n            )}\n\n            {auth.userId === props.userId && (\n              <ButtonTemplate variant={\"danger\"} onClick={openWarningHandler}>\n                DELETE\n              </ButtonTemplate>\n            )}\n          </Card.ImgOverlay>\n        </Card>\n      </ListGroup.Item>\n    </React.Fragment>\n  );\n};\n\nexport default SummitItem;\n","import React from \"react\";\n\nimport SummitItem from \"./SummitItem\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst SummitList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"default\">\n        <h2>No Summits were found.</h2>\n      </div>\n    );\n  }\n\n  return (\n    <ListGroup>\n      {props.items.map(summit => (\n        <SummitItem\n          key={summit.id}\n          id={summit.id}\n          userId={summit.userId}\n          title={summit.title}\n          completedAddress={summit.completedAddress}\n          setDate={summit.setDate}\n          completedDate={summit.completedDate}\n          completed={summit.completed}\n          setImage={summit.setImage}\n          completedImage={summit.completedImage}\n          setCoordinates={summit.setLocation}\n          completedCoordinates={summit.completedLocation}\n          targetDate={summit.targetDate}\n          targetCoordinates={summit.targetCoordinates}\n          likes={summit.likes}\n          summitWord={summit.word}\n          private={summit.private}\n          onDelete={props.onDeleteSummit}\n        />\n      ))}\n    </ListGroup>\n  );\n};\n\nexport default SummitList;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  //create the token on login\n  const login = useCallback((userId, token, expirationDate) => {\n    setToken(token);\n    setTokenExpirationDate(null);\n    setUserId(userId);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); //Expiry date is now plus one hour. Checks if already has an expirationdate\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      //stores token in localStorage\n      \"userData\",\n      JSON.stringify({\n        userId: userId,\n        token: token,\n        expiration: tokenExpirationDate.toISOString() //ISOString can be converted back to a date later.\n      })\n    );\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\"); //Deletes Token\n  }, []);\n\n  //if token changes then adjust timer\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime(); //difference in milliseconds\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  //if the token exists use that to login\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\")); //converts back to JSON\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date() //If Token date is greater than now then it is valid.\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from \"react\";\n// import { useParams } from \"react-router-dom\";\n\nimport SummitList from \"../components/SummitList\";\n\nconst DUMMY_PLACES = [\n  {\n    id: \"p1\",\n    creatorId: \"u1\",\n    title: \"Win a foosball championship\",\n    completedAddress: \"Bartronica, Melbourne\",\n    setDate: \"\",\n    targetDate: \"\",\n    completedDate: \"\",\n    completed: false,\n    setImage: \"uploads/images/Foosball.jpeg\",\n    completedImage:\n      \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.z1EQMkYXiRUgWV9rkGpT9AHaE8%26pid%3DApi&f=1\",\n    setLocation: {},\n    targetLocation: {\n      lat: -37.8785909,\n      lng: 144.9739747\n    },\n    targetAddress:'',\n    completedLocation: {\n      lat: -37.8785909,\n      lng: 144.9739747\n    },\n    likes: [],\n    summitWord: [],\n    private: true\n  },\n  {\n    id: \"p2\",\n    creatorId: \"u2\",\n    title: \"Win a boxing championship\",\n    completedAddress: \"Melbourne Fight Club\",\n    setDate: \"\",\n    targetDate: \"\",\n    completedDate: \"\",\n    completed: false,\n    setImage:\n      \"uploads/images/Boxing.jpeg\",\n    completedImage:\n      \"https://akm-img-a-in.tosshub.com/indiatoday/images/story/201910/jamuna9102019-770x433.png?VB4oJ8dItSqFhwwpLlkhrdCDSzixJd4w\",\n    setLocation: {},\n    targetLocation: {\n      lat: -37.8785909,\n      lng: 144.9739747\n    },\n    targetAddress:'',\n    completedLocation: {\n      lat: -37.7873385,\n      lng: 144.8642536\n    },\n    likes: [],\n    summitWord: [],\n    private: true\n  }\n];\n\nconst Summits = () => {\n//   const userId = useParams().userId;\n//   const loadedSummits = DUMMY_PLACES.filter(\n//     summit => summit.creatorId === userId\n//   );\n  return <SummitList items={DUMMY_PLACES} />;\n};\n\nexport default Summits;\n","import React from 'react';\n\n// import \"./MainHeader.css\";\n\nconst MainHeader = props => {\n    return <header className=\"main-header\">\n        {props.children}\n    </header>\n};\n\nexport default MainHeader;","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport ButtonTemplate from '../FormElements/Button';\nimport { AuthContext } from \"../../context/auth-context\";//Only shows if logged in\n\n// import './NavLinks.css'\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext); //will re-render whenever AuthContext changes\n  return (\n    <div className=\"nav-links\">\n    <ul>\n      <li>\n        <NavLink to=\"/\">SUMMIT FEED</NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/summits`}>MY SUMMITS</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/summits/new\">NEW SUMMIT</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n      <li>\n        <NavLink to=\"/users\">FRIENDS</NavLink>\n      </li>\n      )}\n      {!auth.isLoggedIn && (\n      <li>\n        <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n      </li>\n      )}\n      {auth.isLoggedIn && (\n        <ButtonTemplate onClick={auth.logout}>LOG OUT</ButtonTemplate>\n      )}\n    </ul>\n    </div>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\n\nconst MainNavigation = props => {\n  return (\n    <div className=\"main-navigation\">\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">\n        <img\n          alt=\"Summit logo\"\n          src=\"https://vignette.wikia.nocookie.net/logopedia/images/9/9f/ParamountLandscape.jpg/revision/latest?cb=20130119125027\"\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />{\" \"}\n        Summit\n      </Navbar.Brand>\n      <MainHeader>\n          <NavLinks />\n        </MainHeader>\n    </Navbar>\n    </div>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nimport Summits from \"./summits/pages/Summits\";\n// import Users from \"./users/pages/Users\";\n//import NewSummit from \"./summits/pages/NewSummit\";\n//import UserSummits from \"./summits/pages/UserSummits\";\n//import UpdateSummit from \"./summits/pages/UpdateSummit\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\n// import NavBootstrap from './shared/components/Navigation/NavBootstrap'; UPDATE LATER\n//import Auth from \"./users/pages/Auth\";\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from './shared/hooks/auth-hook';\n\nimport \"./App.css\";\n\n//load when required\nconst Users = React.lazy(()=> import('./users/pages/Users'))\nconst NewSummit = React.lazy(()=> import('./summits/pages/NewSummit'))\nconst UserSummits = React.lazy(()=> import('./summits/pages/UserSummits'))\nconst UpdateSummit = React.lazy(()=> import('./summits/pages/UpdateSummit'))\nconst Auth = React.lazy(()=> import('./users/pages/Auth'))\n\n\n\nconst App = () => {\n const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      //if a correct path is entered switch will prevent the rest from loading.\n      <Switch>\n        <Route path=\"/\" exact>\n          <Summits />\n        </Route>\n        <Route path=\"/users\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/summits\" exact>\n          <UserSummits />\n        </Route>\n        <Route path=\"/summits/new\" exact>\n          <NewSummit />\n        </Route>\n        <Route path=\"/summits/:summitId\">\n          <UpdateSummit />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Summits />\n        </Route>\n        <Route path=\"/:userId/summits\" exact>\n          <UserSummits />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token, //converts to boolean\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        {/* <NavBootstrap /> */}\n        <Container>\n          <main><Suspense fallback={<LoadingSpinner asOverlay/>}>{routes}</Suspense></main>\n        </Container>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}