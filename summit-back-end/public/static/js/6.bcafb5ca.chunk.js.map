{"version":3,"sources":["summits/pages/UserSummits.js"],"names":["UserSummits","useState","loadedSummits","setLoadedSummits","useHttpClient","isLoading","error","sendRequest","clearError","userId","useParams","useEffect","a","async","responseData","summits","console","log","fetchSummits","Fragment","hide","asOverlay","items","onDeleteSummit","deletedSummitId","prevSummits","filter","summit","id"],"mappings":"uNA8CeA,UArCK,WAAO,IAAD,EACkBC,qBADlB,mBACjBC,EADiB,KACFC,EADE,OAE8BC,cAA9CC,EAFgB,EAEhBA,UAAWC,EAFK,EAELA,MAAOC,EAFF,EAEEA,YAAaC,EAFf,EAEeA,WAEjCC,EAASC,cAAYD,OAE3BE,qBAAU,YACa,mBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEUL,EAAY,qBAAD,OACfE,KAHN,OAEXK,EAFW,OAKjBX,EAAiBW,EAAaC,SALb,gDAOjBC,QAAQC,IAAR,MAPiB,wDAUrBC,KACC,CAACX,EAAaE,IAQjB,OACE,kBAAC,IAAMU,SAAP,KACE,kBAAC,IAAD,CAAYb,MAAOA,EAAOc,KAAMZ,IAC/BH,GAAa,kBAAC,IAAD,CAAgBgB,WAAS,KACrChB,GAAaH,GACb,kBAAC,IAAD,CAAYoB,MAAOpB,EAAeqB,eAXX,SAAAC,GAC3BrB,GAAiB,SAAAsB,GAAW,OAC1BA,EAAYC,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAOJ","file":"static/js/6.bcafb5ca.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport SummitList from \"../components/SummitList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\n\nconst UserSummits = () => {\n  const [loadedSummits, setLoadedSummits] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchSummits = async () => {\n      try {\n        const responseData = await sendRequest(\n          `/api/summits/user/${userId}`\n        );\n        setLoadedSummits(responseData.summits);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchSummits();\n  }, [sendRequest, userId]);\n\n  const summitDeletedHandler = deletedSummitId => {\n    setLoadedSummits(prevSummits =>\n      prevSummits.filter(summit => summit.id !== deletedSummitId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} hide={clearError} />\n      {isLoading && <LoadingSpinner asOverlay />}\n      {!isLoading && loadedSummits && (\n        <SummitList items={loadedSummits} onDeleteSummit={summitDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserSummits;\n"],"sourceRoot":""}